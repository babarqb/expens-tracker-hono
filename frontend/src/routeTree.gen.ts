/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const ExpensesIndexLazyImport = createFileRoute('/expenses/')()
const ExpensesCreateLazyImport = createFileRoute('/expenses/create')()
const authSignupLazyImport = createFileRoute('/(auth)/signup')()
const authLoginLazyImport = createFileRoute('/(auth)/login')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesIndexLazyRoute = ExpensesIndexLazyImport.update({
  path: '/expenses/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/expenses/index.lazy').then((d) => d.Route),
)

const ExpensesCreateLazyRoute = ExpensesCreateLazyImport.update({
  path: '/expenses/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/expenses/create.lazy').then((d) => d.Route),
)

const authSignupLazyRoute = authSignupLazyImport
  .update({
    path: '/signup',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/signup.lazy').then((d) => d.Route))

const authLoginLazyRoute = authLoginLazyImport
  .update({
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/expenses/create': {
      id: '/expenses/create'
      path: '/expenses/create'
      fullPath: '/expenses/create'
      preLoaderRoute: typeof ExpensesCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  authLoginLazyRoute,
  authSignupLazyRoute,
  ExpensesCreateLazyRoute,
  ExpensesIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/signup",
        "/expenses/create",
        "/expenses/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "(auth)/login.lazy.tsx"
    },
    "/signup": {
      "filePath": "(auth)/signup.lazy.tsx"
    },
    "/expenses/create": {
      "filePath": "expenses/create.lazy.tsx"
    },
    "/expenses/": {
      "filePath": "expenses/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
